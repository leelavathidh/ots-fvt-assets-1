// DO NOT EDIT: This file is automatically generated.
//
// Only the associated template file should be edited directly.
// Helper class files are automatically regenerated from the template
// files at various times, including record actions and test object
// insertion actions.  Any changes made directly to a helper class
// file will be lost when automatically updated.

package resources;

import com.rational.test.ft.object.interfaces.*;
import com.rational.test.ft.object.interfaces.SAP.*;
import com.rational.test.ft.object.interfaces.WPF.*;
import com.rational.test.ft.object.interfaces.siebel.*;
import com.rational.test.ft.object.interfaces.flex.*;
import com.rational.test.ft.object.interfaces.dojo.*;
import com.rational.test.ft.object.interfaces.generichtmlsubdomain.*;
import com.rational.test.ft.script.*;
import com.rational.test.ft.vp.IFtVerificationPoint;
import com.ibm.rational.test.ft.object.interfaces.sapwebportal.*;
/**
 * Script Name   : <b>iFrame_HTML_PlaybackConvergence</b><br>
 * Generated     : <b>2019/06/07 5:26:23 PM</b><br>
 * Description   : Helper class for script<br>
 * Original Host : Windows 10 amd64 10.0 <br>
 * 
 * @since  June 07, 2019
 * @author SRAVANKUMARREDDY.K
 */
public abstract class iFrame_HTML_PlaybackConvergenceHelper extends RationalTestScript
{
	/**
	 * htmlBrowser: with default state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : Chrome
	 * 		.processName : chrome.exe
	 */
	protected BrowserTestObject browser_htmlBrowser() 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"));
	}
	/**
	 * htmlBrowser: with specific test context and state.
	 *		.class : Html.HtmlBrowser
	 * 		.browserName : Chrome
	 * 		.processName : chrome.exe
	 */
	protected BrowserTestObject browser_htmlBrowser(TestObject anchor, long flags) 
	{
		return new BrowserTestObject(
                        getMappedTestObject("browser_htmlBrowser"), anchor, flags);
	}
	
	/**
	 * bridge1: with default state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_bridge1() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_bridge1"));
	}
	/**
	 * bridge1: with specific test context and state.
	 *		.id : 
	 * 		.type : image
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.image
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_bridge1(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_bridge1"), anchor, flags);
	}
	
	/**
	 * submit: with default state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_submit() 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_submit"));
	}
	/**
	 * submit: with specific test context and state.
	 *		.id : 
	 * 		.type : submit
	 * 		.value : 
	 * 		.title : 
	 * 		.class : Html.INPUT.submit
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject button_submit(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("button_submit"), anchor, flags);
	}
	
	/**
	 * vehicleBike: with default state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : Bike
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : vehicle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_vehicleBike() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_vehicleBike"));
	}
	/**
	 * vehicleBike: with specific test context and state.
	 *		.id : 
	 * 		.type : checkbox
	 * 		.value : Bike
	 * 		.title : 
	 * 		.class : Html.INPUT.checkbox
	 * 		.name : vehicle
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject checkBox_vehicleBike(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("checkBox_vehicleBike"), anchor, flags);
	}
	
	/**
	 * HREFIMGTestPage: with default state.
	 *		.title : HREF, IMG Test Page
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/hrefim ...
	 */
	protected DocumentTestObject document_hrefimgTestPage() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_hrefimgTestPage"));
	}
	/**
	 * HREFIMGTestPage: with specific test context and state.
	 *		.title : HREF, IMG Test Page
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/hrefim ...
	 */
	protected DocumentTestObject document_hrefimgTestPage(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_hrefimgTestPage"), anchor, flags);
	}
	
	/**
	 * iFramesWithAllHTMLControlsSample: with default state.
	 *		.title : iFrames with All HTML controls sample
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/All%20 ...
	 */
	protected DocumentTestObject document_iFramesWithAllHTMLCon() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_iFramesWithAllHTMLCon"));
	}
	/**
	 * iFramesWithAllHTMLControlsSample: with specific test context and state.
	 *		.title : iFrames with All HTML controls sample
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/All%20 ...
	 */
	protected DocumentTestObject document_iFramesWithAllHTMLCon(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_iFramesWithAllHTMLCon"), anchor, flags);
	}
	
	/**
	 * IDTestPage: with default state.
	 *		.title : ID Test Page
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/id.htm
	 */
	protected DocumentTestObject document_idTestPage() 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_idTestPage"));
	}
	/**
	 * IDTestPage: with specific test context and state.
	 *		.title : ID Test Page
	 * 		.class : Html.HtmlDocument
	 * 		.url : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/id.htm
	 */
	protected DocumentTestObject document_idTestPage(TestObject anchor, long flags) 
	{
		return new DocumentTestObject(
                        getMappedTestObject("document_idTestPage"), anchor, flags);
	}
	
	/**
	 * _: with default state.
	 *		.docclassIndex : 4
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.IFRAME
	 * 		.name : 
	 * 		.classIndex : 4
	 */
	protected StatelessGuiSubitemTestObject frame__() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("frame__"));
	}
	/**
	 * _: with specific test context and state.
	 *		.docclassIndex : 4
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.IFRAME
	 * 		.name : 
	 * 		.classIndex : 4
	 */
	protected StatelessGuiSubitemTestObject frame__(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("frame__"), anchor, flags);
	}
	
	/**
	 * offer: with default state.
	 *		.alt : 
	 * 		.id : 
	 * 		.src : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/offer. ...
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_offer() 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_offer"));
	}
	/**
	 * offer: with specific test context and state.
	 *		.alt : 
	 * 		.id : 
	 * 		.src : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/offer. ...
	 * 		.title : 
	 * 		.class : Html.IMG
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected StatelessGuiSubitemTestObject image_offer(TestObject anchor, long flags) 
	{
		return new StatelessGuiSubitemTestObject(
                        getMappedTestObject("image_offer"), anchor, flags);
	}
	
	/**
	 * _99: with default state.
	 *		.text : _Link test for HTML extension_
	 * 		.href : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/id.htm
	 * 		.id : 99
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link__99() 
	{
		return new GuiTestObject(
                        getMappedTestObject("link__99"));
	}
	/**
	 * _99: with specific test context and state.
	 *		.text : _Link test for HTML extension_
	 * 		.href : http://civcez229.nonprod.hclpnp.com/aries-web/Samples/AllControls/iFrames/id.htm
	 * 		.id : 99
	 * 		.title : 
	 * 		.class : Html.A
	 * 		.name : 
	 * 		.classIndex : 0
	 */
	protected GuiTestObject link__99(TestObject anchor, long flags) 
	{
		return new GuiTestObject(
                        getMappedTestObject("link__99"), anchor, flags);
	}
	
	/**
	 * Age: with default state.
	 *		.text : Age (Required) Adult Child Infant Senior Teen
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : Age
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_age() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_age"));
	}
	/**
	 * Age: with specific test context and state.
	 *		.text : Age (Required) Adult Child Infant Senior Teen
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : Age
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_age(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_age"), anchor, flags);
	}
	
	/**
	 * Event: with default state.
	 *		.text : Event (Required) Anniversary Baby Shower Back to School/Fall Birthday Bridal Sho ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : Event
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_event() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_event"));
	}
	/**
	 * Event: with specific test context and state.
	 *		.text : Event (Required) Anniversary Baby Shower Back to School/Fall Birthday Bridal Sho ...
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : Event
	 * 		.classIndex : 0
	 */
	protected SelectGuiSubitemTestObject list_event(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_event"), anchor, flags);
	}
	
	/**
	 * Gender: with default state.
	 *		.text : Gender Male Female
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : Gender
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_gender() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_gender"));
	}
	/**
	 * Gender: with specific test context and state.
	 *		.text : Gender Male Female
	 * 		.id : 
	 * 		.title : 
	 * 		.class : Html.SELECT
	 * 		.name : Gender
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_gender(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_gender"), anchor, flags);
	}
	
	/**
	 * Price: with default state.
	 *		.text : Price Under $20 $21 - $35 $36 - $50 $51 - $75 $76 - $125 $126 - $250 $251 - $500 ...
	 * 		.id : 
	 * 		.class : Html.SELECT
	 * 		.title : 
	 * 		.name : Price
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_price() 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_price"));
	}
	/**
	 * Price: with specific test context and state.
	 *		.text : Price Under $20 $21 - $35 $36 - $50 $51 - $75 $76 - $125 $126 - $250 $251 - $500 ...
	 * 		.id : 
	 * 		.class : Html.SELECT
	 * 		.title : 
	 * 		.name : Price
	 * 		.classIndex : 1
	 */
	protected SelectGuiSubitemTestObject list_price(TestObject anchor, long flags) 
	{
		return new SelectGuiSubitemTestObject(
                        getMappedTestObject("list_price"), anchor, flags);
	}
	
	/**
	 * nameAndAlt10: with default state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : 10
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : nameAndAlt
	 * 		.classIndex : 4
	 */
	protected ToggleGUITestObject radioButton_nameAndAlt10() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_nameAndAlt10"));
	}
	/**
	 * nameAndAlt10: with specific test context and state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : 10
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : nameAndAlt
	 * 		.classIndex : 4
	 */
	protected ToggleGUITestObject radioButton_nameAndAlt10(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_nameAndAlt10"), anchor, flags);
	}
	
	/**
	 * nametest6: with default state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : 6
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : nametest
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_nametest6() 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_nametest6"));
	}
	/**
	 * nametest6: with specific test context and state.
	 *		.id : 
	 * 		.type : radio
	 * 		.value : 6
	 * 		.title : 
	 * 		.class : Html.INPUT.radio
	 * 		.name : nametest
	 * 		.classIndex : 0
	 */
	protected ToggleGUITestObject radioButton_nametest6(TestObject anchor, long flags) 
	{
		return new ToggleGUITestObject(
                        getMappedTestObject("radioButton_nametest6"), anchor, flags);
	}
	
	/**
	 * _1linebox: with default state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : 1linebox
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text__1linebox() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text__1linebox"));
	}
	/**
	 * _1linebox: with specific test context and state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : 1linebox
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text__1linebox(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text__1linebox"), anchor, flags);
	}
	
	/**
	 * _1linebox1: with default state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : 1linebox1
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text__1linebox1() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text__1linebox1"));
	}
	/**
	 * _1linebox1: with specific test context and state.
	 *		.id : 
	 * 		.type : text
	 * 		.title : 
	 * 		.class : Html.INPUT.text
	 * 		.name : 1linebox1
	 * 		.classIndex : 1
	 */
	protected TextGuiTestObject text__1linebox1(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text__1linebox1"), anchor, flags);
	}
	
	/**
	 * Scrollbox: with default state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TEXTAREA
	 * 		.name : Scrollbox
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_scrollbox() 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_scrollbox"));
	}
	/**
	 * Scrollbox: with specific test context and state.
	 *		.id : 
	 * 		.title : 
	 * 		.class : Html.TEXTAREA
	 * 		.name : Scrollbox
	 * 		.classIndex : 0
	 */
	protected TextGuiTestObject text_scrollbox(TestObject anchor, long flags) 
	{
		return new TextGuiTestObject(
                        getMappedTestObject("text_scrollbox"), anchor, flags);
	}
	
	/**
	 * Locate and return the verification point Age_selected object in the SUT.
	 */
	protected IFtVerificationPoint Age_selectedVP() 
	{
		return vp("Age_selected");
	}
	protected IFtVerificationPoint Age_selectedVP(TestObject anchor)
	{
		return vp("Age_selected", anchor);
	}
	
	/**
	 * Locate and return the verification point Age_selected_2 object in the SUT.
	 */
	protected IFtVerificationPoint Age_selected_2VP() 
	{
		return vp("Age_selected_2");
	}
	protected IFtVerificationPoint Age_selected_2VP(TestObject anchor)
	{
		return vp("Age_selected_2", anchor);
	}
	
	/**
	 * Locate and return the verification point Event_selected object in the SUT.
	 */
	protected IFtVerificationPoint Event_selectedVP() 
	{
		return vp("Event_selected");
	}
	protected IFtVerificationPoint Event_selectedVP(TestObject anchor)
	{
		return vp("Event_selected", anchor);
	}
	
	/**
	 * Locate and return the verification point Gender_selected object in the SUT.
	 */
	protected IFtVerificationPoint Gender_selectedVP() 
	{
		return vp("Gender_selected");
	}
	protected IFtVerificationPoint Gender_selectedVP(TestObject anchor)
	{
		return vp("Gender_selected", anchor);
	}
	
	/**
	 * Locate and return the verification point HREFIMGTestPage_standard object in the SUT.
	 */
	protected IFtVerificationPoint HREFIMGTestPage_standardVP() 
	{
		return vp("HREFIMGTestPage_standard");
	}
	protected IFtVerificationPoint HREFIMGTestPage_standardVP(TestObject anchor)
	{
		return vp("HREFIMGTestPage_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point IDTestPage_standard object in the SUT.
	 */
	protected IFtVerificationPoint IDTestPage_standardVP() 
	{
		return vp("IDTestPage_standard");
	}
	protected IFtVerificationPoint IDTestPage_standardVP(TestObject anchor)
	{
		return vp("IDTestPage_standard", anchor);
	}
	
	/**
	 * Locate and return the verification point nameAndAlt10_state object in the SUT.
	 */
	protected IFtVerificationPoint nameAndAlt10_stateVP() 
	{
		return vp("nameAndAlt10_state");
	}
	protected IFtVerificationPoint nameAndAlt10_stateVP(TestObject anchor)
	{
		return vp("nameAndAlt10_state", anchor);
	}
	
	/**
	 * Locate and return the verification point nametest6_state object in the SUT.
	 */
	protected IFtVerificationPoint nametest6_stateVP() 
	{
		return vp("nametest6_state");
	}
	protected IFtVerificationPoint nametest6_stateVP(TestObject anchor)
	{
		return vp("nametest6_state", anchor);
	}
	
	/**
	 * Locate and return the verification point Price_selected object in the SUT.
	 */
	protected IFtVerificationPoint Price_selectedVP() 
	{
		return vp("Price_selected");
	}
	protected IFtVerificationPoint Price_selectedVP(TestObject anchor)
	{
		return vp("Price_selected", anchor);
	}
	
	/**
	 * Locate and return the verification point Scrollbox_text object in the SUT.
	 */
	protected IFtVerificationPoint Scrollbox_textVP() 
	{
		return vp("Scrollbox_text");
	}
	protected IFtVerificationPoint Scrollbox_textVP(TestObject anchor)
	{
		return vp("Scrollbox_text", anchor);
	}
	
	/**
	 * Locate and return the verification point Scrollbox_text_2 object in the SUT.
	 */
	protected IFtVerificationPoint Scrollbox_text_2VP() 
	{
		return vp("Scrollbox_text_2");
	}
	protected IFtVerificationPoint Scrollbox_text_2VP(TestObject anchor)
	{
		return vp("Scrollbox_text_2", anchor);
	}
	
	/**
	 * Locate and return the verification point vehicleBike_state object in the SUT.
	 */
	protected IFtVerificationPoint vehicleBike_stateVP() 
	{
		return vp("vehicleBike_state");
	}
	protected IFtVerificationPoint vehicleBike_stateVP(TestObject anchor)
	{
		return vp("vehicleBike_state", anchor);
	}
	
	/**
	 * Locate and return the verification point vehicleBike_state_2 object in the SUT.
	 */
	protected IFtVerificationPoint vehicleBike_state_2VP() 
	{
		return vp("vehicleBike_state_2");
	}
	protected IFtVerificationPoint vehicleBike_state_2VP(TestObject anchor)
	{
		return vp("vehicleBike_state_2", anchor);
	}
	
	/**
	 * Locate and return the verification point _1linebox1_text object in the SUT.
	 */
	protected IFtVerificationPoint _1linebox1_textVP() 
	{
		return vp("_1linebox1_text");
	}
	protected IFtVerificationPoint _1linebox1_textVP(TestObject anchor)
	{
		return vp("_1linebox1_text", anchor);
	}
	
	/**
	 * Locate and return the verification point _1linebox1_text_2 object in the SUT.
	 */
	protected IFtVerificationPoint _1linebox1_text_2VP() 
	{
		return vp("_1linebox1_text_2");
	}
	protected IFtVerificationPoint _1linebox1_text_2VP(TestObject anchor)
	{
		return vp("_1linebox1_text_2", anchor);
	}
	
	/**
	 * Locate and return the verification point _1linebox_text object in the SUT.
	 */
	protected IFtVerificationPoint _1linebox_textVP() 
	{
		return vp("_1linebox_text");
	}
	protected IFtVerificationPoint _1linebox_textVP(TestObject anchor)
	{
		return vp("_1linebox_text", anchor);
	}
	
	

	protected iFrame_HTML_PlaybackConvergenceHelper()
	{
		setScriptName("iFrame_HTML_PlaybackConvergence");
	}
	
}

